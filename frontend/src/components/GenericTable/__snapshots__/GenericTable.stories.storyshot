// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots GenericTable playground 1`] = `
<ReactDecorator
  onMount={[Function]}
  onUnMount={[Function]}
  story={
    <Story
      PropTable={[Function]}
      components={
        Object {
          "a": [Function],
          "code": [Function],
          "h1": [Function],
          "h2": [Function],
          "h3": [Function],
          "h4": [Function],
          "h5": [Function],
          "h6": [Function],
          "li": [Function],
          "p": [Function],
          "ul": [Function],
        }
      }
      context={
        Object {
          "hooks": HooksContext {
            "currentContext": [Circular],
            "currentDecoratorName": null,
            "currentEffects": Array [
              Object {
                "create": [Function],
              },
            ],
            "currentHooks": Array [],
            "currentPhase": "NONE",
            "hasUpdates": false,
            "hookListsMap": WeakMap {},
            "mountedDecorators": Set {
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
            },
            "nextHookIndex": 0,
            "prevEffects": Array [],
            "prevMountedDecorators": Set {},
            "renderListener": [Function],
          },
          "id": "generictable--playground",
          "kind": "GenericTable",
          "name": "playground",
          "parameters": Object {
            "fileName": "/Users/amauryw/dev/commentor/frontend/src/components/GenericTable/GenericTable.stories.tsx",
            "framework": "react",
            "options": Object {
              "hierarchyRootSeparator": "|",
              "hierarchySeparator": /\\\\/\\|\\\\\\./,
            },
          },
          "story": "playground",
        }
      }
      excludedPropTypes={Array []}
      info=""
      maxPropArrayLength={3}
      maxPropObjectKeys={3}
      maxPropStringLength={50}
      maxPropsIntoLine={3}
      propTableCompare={[Function]}
      propTables={Array []}
      propTablesExclude={Array []}
      showHeader={true}
      showInline={false}
      showSource={true}
      styles={[Function]}
    >
      <GenericTable
        columnsConfig={
          Array [
            Object {
              "columnWidth": 10,
              "index": 0,
              "key": "id",
              "name": "id",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 30,
              "index": 1,
              "key": "body",
              "name": "body",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 20,
              "index": 2,
              "key": "filePath",
              "name": "filePath",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 10,
              "index": 3,
              "key": "url",
              "name": "url",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 20,
              "index": 4,
              "key": "commentor",
              "name": "commentor",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 20,
              "index": 5,
              "key": "pullRequestUrl",
              "name": "pullRequestUrl",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 10,
              "index": 6,
              "key": "repositoryId",
              "name": "repositoryId",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 10,
              "index": 6,
              "key": "creationDate",
              "name": "creationDate",
              "renderer": [Function],
            },
          ]
        }
        defaultLineHeight={600}
        fixedColumnCount={1}
        options={Object {}}
        values={
          Array [
            Object {
              "body": "coucou",
              "commentor": "vor",
              "creationDate": 2019-10-09T20:35:55.068Z,
              "filePath": "vor",
              "id": 1,
              "pullRequestUrl": "vor",
              "repositoryId": "vor",
              "requester": "vor",
              "url": "vor",
            },
            Object {
              "body": "coucou",
              "commentor": "vor",
              "creationDate": 2019-10-09T20:35:55.068Z,
              "filePath": "vor",
              "id": 1,
              "pullRequestUrl": "vor",
              "repositoryId": "vor",
              "requester": "vor",
              "url": "vor",
            },
            Object {
              "body": "123210937812907329847329 fweifehwofewi fweohiewihfewo pihfiowheoifewhfewoihfewoih8472398472398472984723987",
              "commentor": "commentor",
              "creationDate": 1570653355068,
              "filePath": "filePath",
              "id": 1,
              "pullRequestUrl": "pullRequestUrl",
              "repositoryId": 123421,
              "requester": "requester",
              "url": "url",
            },
            Object {
              "body": "coucou",
              "commentor": "vor",
              "creationDate": 2019-10-09T20:35:55.068Z,
              "filePath": "vor",
              "id": 1,
              "pullRequestUrl": "vor",
              "repositoryId": "vor",
              "requester": "vor",
              "url": "vor",
            },
          ]
        }
      />
    </Story>
  }
>
  <Story
    PropTable={[Function]}
    components={
      Object {
        "a": [Function],
        "code": [Function],
        "h1": [Function],
        "h2": [Function],
        "h3": [Function],
        "h4": [Function],
        "h5": [Function],
        "h6": [Function],
        "li": [Function],
        "p": [Function],
        "ul": [Function],
      }
    }
    context={
      Object {
        "hooks": HooksContext {
          "currentContext": [Circular],
          "currentDecoratorName": null,
          "currentEffects": Array [
            Object {
              "create": [Function],
            },
          ],
          "currentHooks": Array [],
          "currentPhase": "NONE",
          "hasUpdates": false,
          "hookListsMap": WeakMap {},
          "mountedDecorators": Set {
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
          },
          "nextHookIndex": 0,
          "prevEffects": Array [],
          "prevMountedDecorators": Set {},
          "renderListener": [Function],
        },
        "id": "generictable--playground",
        "kind": "GenericTable",
        "name": "playground",
        "parameters": Object {
          "fileName": "/Users/amauryw/dev/commentor/frontend/src/components/GenericTable/GenericTable.stories.tsx",
          "framework": "react",
          "options": Object {
            "hierarchyRootSeparator": "|",
            "hierarchySeparator": /\\\\/\\|\\\\\\./,
          },
        },
        "story": "playground",
      }
    }
    excludedPropTypes={Array []}
    info=""
    maxPropArrayLength={3}
    maxPropObjectKeys={3}
    maxPropStringLength={50}
    maxPropsIntoLine={3}
    propTableCompare={[Function]}
    propTables={Array []}
    propTablesExclude={Array []}
    showHeader={true}
    showInline={false}
    showSource={true}
    styles={[Function]}
  >
    <div
      style={
        Object {
          "position": "relative",
          "zIndex": 0,
        }
      }
    >
      <GenericTable
        columnsConfig={
          Array [
            Object {
              "columnWidth": 10,
              "index": 0,
              "key": "id",
              "name": "id",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 30,
              "index": 1,
              "key": "body",
              "name": "body",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 20,
              "index": 2,
              "key": "filePath",
              "name": "filePath",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 10,
              "index": 3,
              "key": "url",
              "name": "url",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 20,
              "index": 4,
              "key": "commentor",
              "name": "commentor",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 20,
              "index": 5,
              "key": "pullRequestUrl",
              "name": "pullRequestUrl",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 10,
              "index": 6,
              "key": "repositoryId",
              "name": "repositoryId",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 10,
              "index": 6,
              "key": "creationDate",
              "name": "creationDate",
              "renderer": [Function],
            },
          ]
        }
        defaultLineHeight={600}
        fixedColumnCount={1}
        options={Object {}}
        values={
          Array [
            Object {
              "body": "coucou",
              "commentor": "vor",
              "creationDate": 2019-10-09T20:35:55.068Z,
              "filePath": "vor",
              "id": 1,
              "pullRequestUrl": "vor",
              "repositoryId": "vor",
              "requester": "vor",
              "url": "vor",
            },
            Object {
              "body": "coucou",
              "commentor": "vor",
              "creationDate": 2019-10-09T20:35:55.068Z,
              "filePath": "vor",
              "id": 1,
              "pullRequestUrl": "vor",
              "repositoryId": "vor",
              "requester": "vor",
              "url": "vor",
            },
            Object {
              "body": "123210937812907329847329 fweifehwofewi fweohiewihfewo pihfiowheoifewhfewoihfewoih8472398472398472984723987",
              "commentor": "commentor",
              "creationDate": 1570653355068,
              "filePath": "filePath",
              "id": 1,
              "pullRequestUrl": "pullRequestUrl",
              "repositoryId": 123421,
              "requester": "requester",
              "url": "url",
            },
            Object {
              "body": "coucou",
              "commentor": "vor",
              "creationDate": 2019-10-09T20:35:55.068Z,
              "filePath": "vor",
              "id": 1,
              "pullRequestUrl": "vor",
              "repositoryId": "vor",
              "requester": "vor",
              "url": "vor",
            },
          ]
        }
      >
        <GenericTablestyle__Wrapper>
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "GenericTablestyle__Wrapper-x62i1-4",
                  "isStatic": true,
                  "lastClassName": "hThILP",
                  "rules": Array [
                    "flex:1 1 auto;display:flex;flex-direction:column;",
                  ],
                },
                "displayName": "GenericTablestyle__Wrapper",
                "render": [Function],
                "styledComponentId": "GenericTablestyle__Wrapper-x62i1-4",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="GenericTablestyle__Wrapper-x62i1-4 hThILP"
            >
              <AutoSizer
                disableHeight={false}
                disableWidth={false}
                onResize={[Function]}
                style={Object {}}
              >
                <div
                  style={
                    Object {
                      "height": 0,
                      "overflow": "visible",
                      "width": 0,
                    }
                  }
                >
                  <MultiGrid
                    cellRenderer={[Function]}
                    classNameBottomLeftGrid=""
                    classNameBottomRightGrid=""
                    classNameTopLeftGrid=""
                    classNameTopRightGrid=""
                    columnCount={8}
                    columnWidth={[Function]}
                    enableFixedColumnScroll={true}
                    enableFixedRowScroll={true}
                    fixedColumnCount={1}
                    fixedRowCount={1}
                    height={600}
                    hideBottomLeftGridScrollbar={true}
                    hideTopRightGridScrollbar={true}
                    rowCount={5}
                    rowHeight={[Function]}
                    scrollToColumn={0}
                    scrollToRow={0}
                    style={
                      Object {
                        "backgroundColor": "white",
                        "borderRadius": "5px",
                        "boxShadow": "0px 0px 6px rgba(34,34,34,0.1)",
                        "overflow": "hidden",
                      }
                    }
                    styleBottomLeftGrid={Object {}}
                    styleBottomRightGrid={Object {}}
                    styleTopLeftGrid={Object {}}
                    styleTopRightGrid={Object {}}
                    width={0}
                  />
                </div>
              </AutoSizer>
            </div>
          </StyledComponent>
        </GenericTablestyle__Wrapper>
      </GenericTable>
    </div>
    <button
      className="info__show-button"
      onClick={[Function]}
      style={
        Object {
          "background": "#027ac5",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": 12,
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Show Info
    </button>
  </Story>
</ReactDecorator>
`;

exports[`Storyshots GenericTable with empty comments 1`] = `
<ReactDecorator
  onMount={[Function]}
  onUnMount={[Function]}
  story={
    <Story
      PropTable={[Function]}
      components={
        Object {
          "a": [Function],
          "code": [Function],
          "h1": [Function],
          "h2": [Function],
          "h3": [Function],
          "h4": [Function],
          "h5": [Function],
          "h6": [Function],
          "li": [Function],
          "p": [Function],
          "ul": [Function],
        }
      }
      context={
        Object {
          "hooks": HooksContext {
            "currentContext": [Circular],
            "currentDecoratorName": null,
            "currentEffects": Array [
              Object {
                "create": [Function],
              },
            ],
            "currentHooks": Array [],
            "currentPhase": "NONE",
            "hasUpdates": false,
            "hookListsMap": WeakMap {},
            "mountedDecorators": Set {
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
            },
            "nextHookIndex": 0,
            "prevEffects": Array [],
            "prevMountedDecorators": Set {},
            "renderListener": [Function],
          },
          "id": "generictable--with-empty-comments",
          "kind": "GenericTable",
          "name": "with empty comments",
          "parameters": Object {
            "fileName": "/Users/amauryw/dev/commentor/frontend/src/components/GenericTable/GenericTable.stories.tsx",
            "framework": "react",
            "options": Object {
              "hierarchyRootSeparator": "|",
              "hierarchySeparator": /\\\\/\\|\\\\\\./,
            },
          },
          "story": "with empty comments",
        }
      }
      excludedPropTypes={Array []}
      info=""
      maxPropArrayLength={3}
      maxPropObjectKeys={3}
      maxPropStringLength={50}
      maxPropsIntoLine={3}
      propTableCompare={[Function]}
      propTables={Array []}
      propTablesExclude={Array []}
      showHeader={true}
      showInline={false}
      showSource={true}
      styles={[Function]}
    >
      <GenericTable
        columnsConfig={
          Array [
            Object {
              "columnWidth": 10,
              "index": 0,
              "key": "id",
              "name": "id",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 30,
              "index": 1,
              "key": "body",
              "name": "body",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 20,
              "index": 2,
              "key": "filePath",
              "name": "filePath",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 10,
              "index": 3,
              "key": "url",
              "name": "url",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 20,
              "index": 4,
              "key": "commentor",
              "name": "commentor",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 20,
              "index": 5,
              "key": "pullRequestUrl",
              "name": "pullRequestUrl",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 10,
              "index": 6,
              "key": "repositoryId",
              "name": "repositoryId",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 10,
              "index": 6,
              "key": "creationDate",
              "name": "creationDate",
              "renderer": [Function],
            },
          ]
        }
        defaultLineHeight={300}
        fixedColumnCount={2}
        options={Object {}}
        values={Array []}
      />
    </Story>
  }
>
  <Story
    PropTable={[Function]}
    components={
      Object {
        "a": [Function],
        "code": [Function],
        "h1": [Function],
        "h2": [Function],
        "h3": [Function],
        "h4": [Function],
        "h5": [Function],
        "h6": [Function],
        "li": [Function],
        "p": [Function],
        "ul": [Function],
      }
    }
    context={
      Object {
        "hooks": HooksContext {
          "currentContext": [Circular],
          "currentDecoratorName": null,
          "currentEffects": Array [
            Object {
              "create": [Function],
            },
          ],
          "currentHooks": Array [],
          "currentPhase": "NONE",
          "hasUpdates": false,
          "hookListsMap": WeakMap {},
          "mountedDecorators": Set {
            [Function],
            [Function],
            [Function],
            [Function],
            [Function],
          },
          "nextHookIndex": 0,
          "prevEffects": Array [],
          "prevMountedDecorators": Set {},
          "renderListener": [Function],
        },
        "id": "generictable--with-empty-comments",
        "kind": "GenericTable",
        "name": "with empty comments",
        "parameters": Object {
          "fileName": "/Users/amauryw/dev/commentor/frontend/src/components/GenericTable/GenericTable.stories.tsx",
          "framework": "react",
          "options": Object {
            "hierarchyRootSeparator": "|",
            "hierarchySeparator": /\\\\/\\|\\\\\\./,
          },
        },
        "story": "with empty comments",
      }
    }
    excludedPropTypes={Array []}
    info=""
    maxPropArrayLength={3}
    maxPropObjectKeys={3}
    maxPropStringLength={50}
    maxPropsIntoLine={3}
    propTableCompare={[Function]}
    propTables={Array []}
    propTablesExclude={Array []}
    showHeader={true}
    showInline={false}
    showSource={true}
    styles={[Function]}
  >
    <div
      style={
        Object {
          "position": "relative",
          "zIndex": 0,
        }
      }
    >
      <GenericTable
        columnsConfig={
          Array [
            Object {
              "columnWidth": 10,
              "index": 0,
              "key": "id",
              "name": "id",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 30,
              "index": 1,
              "key": "body",
              "name": "body",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 20,
              "index": 2,
              "key": "filePath",
              "name": "filePath",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 10,
              "index": 3,
              "key": "url",
              "name": "url",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 20,
              "index": 4,
              "key": "commentor",
              "name": "commentor",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 20,
              "index": 5,
              "key": "pullRequestUrl",
              "name": "pullRequestUrl",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 10,
              "index": 6,
              "key": "repositoryId",
              "name": "repositoryId",
              "renderer": [Function],
            },
            Object {
              "columnWidth": 10,
              "index": 6,
              "key": "creationDate",
              "name": "creationDate",
              "renderer": [Function],
            },
          ]
        }
        defaultLineHeight={300}
        fixedColumnCount={2}
        options={Object {}}
        values={Array []}
      >
        <GenericTablestyle__Wrapper>
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "GenericTablestyle__Wrapper-x62i1-4",
                  "isStatic": true,
                  "lastClassName": "hThILP",
                  "rules": Array [
                    "flex:1 1 auto;display:flex;flex-direction:column;",
                  ],
                },
                "displayName": "GenericTablestyle__Wrapper",
                "render": [Function],
                "styledComponentId": "GenericTablestyle__Wrapper-x62i1-4",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="GenericTablestyle__Wrapper-x62i1-4 hThILP"
            >
              <AutoSizer
                disableHeight={false}
                disableWidth={false}
                onResize={[Function]}
                style={Object {}}
              >
                <div
                  style={
                    Object {
                      "height": 0,
                      "overflow": "visible",
                      "width": 0,
                    }
                  }
                >
                  <MultiGrid
                    cellRenderer={[Function]}
                    classNameBottomLeftGrid=""
                    classNameBottomRightGrid=""
                    classNameTopLeftGrid=""
                    classNameTopRightGrid=""
                    columnCount={8}
                    columnWidth={[Function]}
                    enableFixedColumnScroll={true}
                    enableFixedRowScroll={true}
                    fixedColumnCount={2}
                    fixedRowCount={1}
                    height={300}
                    hideBottomLeftGridScrollbar={true}
                    hideTopRightGridScrollbar={true}
                    rowCount={1}
                    rowHeight={[Function]}
                    scrollToColumn={0}
                    scrollToRow={0}
                    style={
                      Object {
                        "backgroundColor": "white",
                        "borderRadius": "5px",
                        "boxShadow": "0px 0px 6px rgba(34,34,34,0.1)",
                        "overflow": "hidden",
                      }
                    }
                    styleBottomLeftGrid={Object {}}
                    styleBottomRightGrid={Object {}}
                    styleTopLeftGrid={Object {}}
                    styleTopRightGrid={Object {}}
                    width={0}
                  />
                </div>
              </AutoSizer>
            </div>
          </StyledComponent>
        </GenericTablestyle__Wrapper>
      </GenericTable>
    </div>
    <button
      className="info__show-button"
      onClick={[Function]}
      style={
        Object {
          "background": "#027ac5",
          "border": "none",
          "borderRadius": "0 0 0 5px",
          "color": "#fff",
          "cursor": "pointer",
          "display": "block",
          "fontFamily": "sans-serif",
          "fontSize": 12,
          "padding": "5px 15px",
          "position": "fixed",
          "right": 0,
          "top": 0,
        }
      }
      type="button"
    >
      Show Info
    </button>
  </Story>
</ReactDecorator>
`;
